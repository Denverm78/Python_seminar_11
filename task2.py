# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä—É —Å–≤–æ–π—Å—Ç–≤.
# –ù–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–æ –∏ —Å—Ç—Ä–æ–∫—É.
# üìå –ü—Ä–∏ –Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞, —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞—Ä—É —Å–ø–∏—Å–∫–æ–≤-–∞—Ä—Ö–∏–≤–æ–≤
# üìå list-–∞—Ä—Ö–∏–≤—ã —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞

class Archive():
    """The class stores a couple of properties: a number and a string"""
    
    _flag = None

    def __new__(cls, number: int, text: str):
        """The function creates archive lists with old data"""
        
        if cls._flag == None:
            cls._flag = super().__new__(cls)
            cls._flag.archNumber = []
            cls._flag.archText = []
        elif cls._flag != None:
            cls._flag.archText.append(cls._flag.text)
            cls._flag.archNumber.append(cls._flag.number)
        return cls._flag

    def __init__(self, number: int, text: str):
        self.number = number
        self.text = text
        
    def __str__(self):
        return f'{self.archText}, {self.archNumber}, {self.text}, {self.number}'


t1 = Archive(10, "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞ –≤—Ä—É—á–Ω—É—é –≤ —Ç—Ä–∞–Ω—à–µ—è—Ö")
t2 = Archive(12, "–ó–∞—Å—ã–ø–∫–∞ –≤—Ä—É—á–Ω—É—é —Ç—Ä–∞–Ω—à–µ–π, –ø–∞–∑—É—Ö –∫–æ—Ç–ª–æ–≤–∞–Ω–æ–≤")
t3 = Archive(14, "–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –∞–Ω—Ç–∏–∫–æ—Ä—Ä–æ–∑–∏–æ–Ω–Ω–æ–π –∏–∑–æ–ª—è—Ü–∏–∏")

print(t3)
# help(Archive)
