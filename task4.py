# –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤ –∏–∑ –∑–∞–¥–∞—á–∏ 2.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

class Archive():
    """The class stores a couple of properties: a number and a string"""
    
    _flag = None

    def __new__(cls, number: int, text: str):
        """The function creates archive lists with old data"""
        
        if cls._flag == None:
            cls._flag = super().__new__(cls)
            cls._flag.archNumber = []
            cls._flag.archText = []
        elif cls._flag != None:
            cls._flag.archText.append(cls._flag.text)
            cls._flag.archNumber.append(cls._flag.number)
        return cls._flag

    def __init__(self, number: int, text: str):
        self.number = number
        self.text = text
        
    def __str__(self):
        return f'–ê—Ä—Ö–∏–≤: {self.archText}, {self.archNumber},\n–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: {self.text}, {self.number}'


    def __repr__(self):
        return f'Archive: {self.text = }, {self.number = }'


t1 = Archive(10, "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–Ω—Ç–∞ –≤—Ä—É—á–Ω—É—é –≤ —Ç—Ä–∞–Ω—à–µ—è—Ö")
t2 = Archive(12, "–ó–∞—Å—ã–ø–∫–∞ –≤—Ä—É—á–Ω—É—é —Ç—Ä–∞–Ω—à–µ–π, –ø–∞–∑—É—Ö –∫–æ—Ç–ª–æ–≤–∞–Ω–æ–≤")
t3 = Archive(14, "–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –∞–Ω—Ç–∏–∫–æ—Ä—Ä–æ–∑–∏–æ–Ω–Ω–æ–π –∏–∑–æ–ª—è—Ü–∏–∏")

print(t3)
print(repr(t3))